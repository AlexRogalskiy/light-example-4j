---
singletons:
- javax.sql.DataSource:
  - com.zaxxer.hikari.HikariDataSource:
      DriverClassName: com.mysql.jdbc.Driver
      jdbcUrl: jdbc:mysql://localhost:3306/eventuate?useSSL=false
      username: mysqluser
      password: mysqlpw
- com.networknt.eventuate.common.impl.sync.AggregateCrud:
  - com.networknt.eventuate.client.EventuateLocalDBAggregateCrud
- com.networknt.eventuate.common.impl.sync.AggregateEvents:
  - com.networknt.eventuate.client.EventuateLocalAggregatesEvents
- com.networknt.eventuate.common.impl.AggregateCrud:
  - com.networknt.eventuate.common.impl.adapters.SyncToAsyncAggregateCrudAdapter
- com.networknt.eventuate.common.impl.AggregateEvents:
  - com.networknt.eventuate.common.impl.adapters.SyncToAsyncAggregateEventsAdapter
- com.networknt.eventuate.common.SnapshotManager:
  - com.networknt.eventuate.common.SnapshotManagerImpl
- com.networknt.eventuate.common.MissingApplyEventMethodStrategy:
  - com.networknt.eventuate.common.DefaultMissingApplyEventMethodStrategy
- com.networknt.eventuate.common.EventuateAggregateStore:
  - com.networknt.eventuate.common.impl.EventuateAggregateStoreImpl
- com.networknt.eventuate.common.sync.EventuateAggregateStore:
  - com.networknt.eventuate.common.impl.sync.EventuateAggregateStoreImpl
- com.networknt.eventuate.account.command.customer.Customer:
  - com.networknt.eventuate.account.command.customer.Customer


# HandlerProvider implementation
- com.networknt.server.HandlerProvider:
  - ccom.networknt.eventuate.customer.command.PathHandlerProvider


- com.networknt.handler.MiddlewareHandler:
  - com.networknt.validator.ValidatorHandler
#Sanitizer Encode cross site scripting
  - com.networknt.sanitizer.SanitizerHandler
#SimpleAudit Log important info about the request into audit log
  - com.networknt.audit.AuditHandler
#Body Parse body based on content type in the header.
  - com.networknt.body.BodyHandler
#Security JWT token verification and scope verification (depending on SwaggerHandler)
  - com.networknt.security.JwtVerifyHandler
#Swagger Parsing swagger specification based on request uri and method.
  - com.networknt.swagger.SwaggerHandler
#Correlation Create correlationId if it doesn't exist in the request header and put it into the request header
  - com.networknt.correlation.CorrelationHandler
#Traceability Put traceabilityId into response header from request header if it exists
  - com.networknt.traceability.TraceabilityHandler
#Metrics In order to calculate response time accurately, this needs to be the second.
  - com.networknt.metrics.MetricsHandler
#Exception Global exception handler that needs to be called first.
  - com.networknt.exception.ExceptionHandler
